This is a generated file for the l3build validation system.
Don't change this file in any respect.
(../hyperref.sty
Package: hyperref ....-..-.. v... Hypertext links for LaTeX
(../ltxcmds.sty
Package: ltxcmds ....-..-.. v... LaTeX kernel commands for general use (HO)
)
(../iftex.sty
Package: iftex ....-..-.. v... TeX engine tests
)
(../pdftexcmds.sty
Package: pdftexcmds ....-..-.. v... Utility functions of pdfTeX for LuaTeX (HO)
(../infwarerr.sty
Package: infwarerr ....-..-.. v... Providing info/warning/error messages (HO)
)
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode is ignored in DVI mode.
)
(../keyval.sty
Package: keyval ....-..-.. v... key=value parser (DPC)
\KV@toks@=\toks...
)
(../kvsetkeys.sty
Package: kvsetkeys ....-..-.. v... Key value parser (HO)
)
(../kvdefinekeys.sty
Package: kvdefinekeys ....-..-.. v... Define keys (HO)
)
(../pdfescape.sty
Package: pdfescape ....-..-.. v... Implements pdfTeX's escape features (HO)
)
(../hycolor.sty
Package: hycolor ....-..-.. v... Color options for hyperref/bookmark (HO)
**** Add to hook begindocument (hycolor) on input line ... <- \def \@tempa ##1,{\XC@ifxcase \tm {\XC@mod@rgb {\XC@calcN {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@cmy {\XC@calcC {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@cmyk {\XC@calcC {##1}\@@tmp \edef \@@tmp {0,0,0,\@@tmp }}\XC@mod@RGB {\edef \@@scl {\rangeRGB }\XC@calcM {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@HTML {\edef \@@scl {\@cclv }\XC@calcM {##1}\@@tmp \XC@calcH \@@tmp \@@tmp \edef \@@tmp {\@@tmp \@@tmp \@@tmp }}\XC@mod@HSB {\edef \@@scl {\rangeHSB }\XC@calcM {##1}\@@tmp \edef \@@tmp {0,0,\@@tmp }}\XC@mod@Gray {\edef \@@scl {\rangeGray }\XC@calcM {##1}\@@tmp }}{\XC@calcN {##1}\@@tmp \edef \@@tmp {0,0,\@@tmp }}}\ifx \XC@cnv@gray \@tempa \def \XC@cnv@gray ##1,{\XC@ifxcase \tm {\XC@mod@rgb {\XC@calcN {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@gray {}\XC@mod@cmy {\XC@calcC {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@cmyk {\XC@calcC {##1}\@@tmp \edef \@@tmp {0,0,0,\@@tmp }}\XC@mod@RGB {\edef \@@scl {\rangeRGB }\XC@calcM {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@HTML {\edef \@@scl {\@cclv }\XC@calcM {##1}\@@tmp \XC@calcH \@@tmp \@@tmp \edef \@@tmp {\@@tmp \@@tmp \@@tmp }}\XC@mod@HSB {\edef \@@scl {\rangeHSB }\XC@calcM {##1}\@@tmp \edef \@@tmp {0,0,\@@tmp }}\XC@mod@Gray {\edef \@@scl {\rangeGray }\XC@calcM {##1}\@@tmp }}{\XC@calcN {##1}\@@tmp \edef \@@tmp {0,0,\@@tmp }}}\fi \let \@tempa \relax 
) (../letltxmacro.sty
Package: letltxmacro ....-..-.. v... Let assignment for LaTeX macros (HO)
)
(../auxhook.sty
Package: auxhook ....-..-.. v... Hooks for auxiliary files (HO)
)
(../kvoptions.sty
Package: kvoptions ....-..-.. v... Key value format for package options (HO)
)
\@linkdim=\dimen...
\Hy@linkcounter=\count...
\Hy@pagecounter=\count...
(../pd1enc.def
File: pd1enc.def ....-..-.. v... Hyperref: PDFDocEncoding definition (HO)
Now handling font encoding PD1 ...
... no UTF-8 mapping file for font encoding PD1
)
**** Add to hook begindocument (hyperref) on input line ... <- \@ifundefined {pdfstringdefDisableCommands}{\let \pdfstringdefDisableCommands \HyPsd@pdfstringdefDisableCommands }{}
(../intcalc.sty
Package: intcalc ....-..-.. v... Expandable calculations with integers (HO)
)
(../etexcmds.sty
Package: etexcmds ....-..-.. v... Avoid name clashes with e-TeX commands (HO)
)
\Hy@SavedSpaceFactor=\count...
Package hyperref Info: Hyper figures OFF on input line ....
Package hyperref Info: Link nesting OFF on input line ....
Package hyperref Info: Hyper index ON on input line ....
Package hyperref Info: Plain pages OFF on input line ....
Package hyperref Info: Backreferencing OFF on input line ....
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks ON on input line ....
\c@Hy@tempcnt=\count...
(../url.sty
\Urlmuskip=\muskip...
Package: url ....-..-..  ver 3.4  Verb mode for urls, etc.
)
LaTeX Info: Redefining \url on input line ....
\XeTeXLinkMargin=\dimen...
(../bitset.sty
Package: bitset ....-..-.. v... Handle bit-vector datatype (HO)
(../bigintcalc.sty
Package: bigintcalc ....-..-.. v... Expandable calculations on big integers (HO)
))
\Fld@menulength=\count...
\Field@Width=\dimen...
\Fld@charsize=\dimen...
Package hyperref Info: Hyper figures OFF on input line ....
Package hyperref Info: Link nesting OFF on input line ....
Package hyperref Info: Hyper index ON on input line ....
Package hyperref Info: backreferencing OFF on input line ....
Package hyperref Info: Link coloring OFF on input line ....
Package hyperref Info: Link coloring with OCG OFF on input line ....
Package hyperref Info: PDF/A mode OFF on input line ....
LaTeX Info: Redefining \ref on input line ....
LaTeX Info: Redefining \pageref on input line ....
**** Add to hook shipout/before (hyperref) on input line ... <- \Hy@EveryPageHook \ifx \Hy@EveryPageBoxHook \ltx@empty \else \setbox \AtBeginShipoutBox =\vbox {\offinterlineskip \Hy@EveryPageBoxHook \box \AtBeginShipoutBox }\fi 
**** Add to hook shipout/firstpage (hyperref) on input line ... <- \Hy@FirstPageHook 
\Hy@abspage=\count...
\c@Item=\count...
**** Add to hook begindocument (hyperref) on input line ... <- \def \Hy@varioref@undefined {{??}{??}{}{}{}} \@ifpackageloaded {varioref}{\def \vref@pagenum ##1##2{\@ifundefined {r@##2}{\expandafter \let \csname r@##2\endcsname \Hy@varioref@undefined }{}\edef ##1{\getpagerefnumber {##2}}}}{} \def \Hy@varioref@refstepcounter ##1{\stepcounter {##1}\protected@edef \@currentlabel {\csname p@##1\expandafter \endcsname \csname the##1\endcsname }} \ifx \refstepcounter \Hy@varioref@refstepcounter \let \H@refstepcounter \refstepcounter \let \refstepcounter \Hy@saved@refstepcounter \fi 
\c@Hfootnote=\count...
)
Package hyperref Info: Driver (default): hdvips.
(../hdvips.def
File: hdvips.def ....-..-.. v... Hyperref driver for dvips
(../pdfmark.def
File: pdfmark.def ....-..-.. v... Hyperref definitions for pdfmark specials
\pdf@docset=\toks...
\pdf@box=\box...
\pdf@toks=\toks...
\pdf@defaulttoks=\toks...
\HyField@AnnotCount=\count...
\Fld@listcount=\count...
\c@bookmark@seq@number=\count...
(../rerunfilecheck.styPackage: rerunfilecheck ....-..-.. v... Rerun checks for auxiliary files (HO)
(../uniquecounter.styPackage: uniquecounter ....-..-.. v... Provide unlimited unique counter (HO)
)
Package uniquecounter Info: New unique counter `rerunfilecheck' on input line ....
)
\Hy@SectionHShift=\skip...
)
**** Add to hook shipout/firstpage (hyperref) on input line ... <- \ifHy@setpagesize \begingroup \@ifundefined {stockwidth}{\ifdim \paperwidth >\z@ \ifdim \paperheight >\z@ \special {papersize=\the \paperwidth ,\the \paperheight }\fi \fi }{\ifdim \stockwidth >\z@ \ifdim \stockheight >\z@ \special {papersize=\the \stockwidth ,\the \stockheight }\fi \fi }\endgroup \fi \Hy@DisableOption {setpagesize}
)
**** Add to hook begindocument (hyperref) on input line ... <- \Hy@AtBeginDocumentHook {}\let \Hy@AtBeginDocumentHook \@undefined 
The hook 'begindocument':
 Code chunks:
    l3backend-dvips -> \cs_if_exist:cT {ver@color.sty}{\cs_set_protected:Npn \__color_backend_pickup:N ##1{\exp_args:NV \tl_if_head_is_space:nTF \current@color {\tl_set:Nx ##1{{spot}{\exp_after:wN \use:n \current@color \c_space_tl 1}}}{\exp_last_unbraced:Nx \__color_backend_pickup:w {\current@color }\s__color_stop ##1}}\cs_new_protected:Npn \__color_backend_pickup:w ##1 ##2\s__color_stop ##3{\tl_set:Nn ##3{{##1}{##2}}}}\cs_new_eq:NN \__graphics_backend_getbb_eps:n \graphics_read_bb:n 
    hycolor -> \def \@tempa ##1,{\XC@ifxcase \tm {\XC@mod@rgb {\XC@calcN {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@cmy {\XC@calcC {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@cmyk {\XC@calcC {##1}\@@tmp \edef \@@tmp {0,0,0,\@@tmp }}\XC@mod@RGB {\edef \@@scl {\rangeRGB }\XC@calcM {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@HTML {\edef \@@scl {\@cclv }\XC@calcM {##1}\@@tmp \XC@calcH \@@tmp \@@tmp \edef \@@tmp {\@@tmp \@@tmp \@@tmp }}\XC@mod@HSB {\edef \@@scl {\rangeHSB }\XC@calcM {##1}\@@tmp \edef \@@tmp {0,0,\@@tmp }}\XC@mod@Gray {\edef \@@scl {\rangeGray }\XC@calcM {##1}\@@tmp }}{\XC@calcN {##1}\@@tmp \edef \@@tmp {0,0,\@@tmp }}}\ifx \XC@cnv@gray \@tempa \def \XC@cnv@gray ##1,{\XC@ifxcase \tm {\XC@mod@rgb {\XC@calcN {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@gray {}\XC@mod@cmy {\XC@calcC {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@cmyk {\XC@calcC {##1}\@@tmp \edef \@@tmp {0,0,0,\@@tmp }}\XC@mod@RGB {\edef \@@scl {\rangeRGB }\XC@calcM {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@HTML {\edef \@@scl {\@cclv }\XC@calcM {##1}\@@tmp \XC@calcH \@@tmp \@@tmp \edef \@@tmp {\@@tmp \@@tmp \@@tmp }}\XC@mod@HSB {\edef \@@scl {\rangeHSB }\XC@calcM {##1}\@@tmp \edef \@@tmp {0,0,\@@tmp }}\XC@mod@Gray {\edef \@@scl {\rangeGray }\XC@calcM {##1}\@@tmp }}{\XC@calcN {##1}\@@tmp \edef \@@tmp {0,0,\@@tmp }}}\fi \let \@tempa \relax 
    hyperref -> \@ifundefined {pdfstringdefDisableCommands}{\let \pdfstringdefDisableCommands \HyPsd@pdfstringdefDisableCommands }{}\def \Hy@varioref@undefined {{??}{??}{}{}{}} \@ifpackageloaded {varioref}{\def \vref@pagenum ##1##2{\@ifundefined {r@##2}{\expandafter \let \csname r@##2\endcsname \Hy@varioref@undefined }{}\edef ##1{\getpagerefnumber {##2}}}}{} \def \Hy@varioref@refstepcounter ##1{\stepcounter {##1}\protected@edef \@currentlabel {\csname p@##1\expandafter \endcsname \csname the##1\endcsname }} \ifx \refstepcounter \Hy@varioref@refstepcounter \let \H@refstepcounter \refstepcounter \let \refstepcounter \Hy@saved@refstepcounter \fi \Hy@AtBeginDocumentHook {}\let \Hy@AtBeginDocumentHook \@undefined 
 Extra code next invocation:
    ---
 Rules:
    ---
 Execution order:
    not set yet
Update code for hook 'begindocument' on input line ...:
Code labels for sorting:
 l3backend-dvips, hycolor and hyperref
Data structure for label rules:
 l3backend-dvips = 0 -> 
 hycolor = 0 -> 
 hyperref = 0 -> 
Handled code for l3backend-dvips
Handled code for hycolor
Handled code for hyperref
Update code for hook 'enddocument' on input line ...:
Update code for hook 'rmfamily' on input line ...:
Update code for hook 'sffamily' on input line ...:
Update code for hook 'ttfamily' on input line ...:
Update code for hook 'defaultfamily' on input line ...:
Update code for hook 'documentclass' on input line ...:
Code labels for sorting:
 legacy
Data structure for label rules:
 legacy = 0 -> 
Handled code for legacy
Update code for hook 'begindocument/end' on input line ...:
Update code for hook 'enddocument/afterlastpage' on input line ...:
Update code for hook 'enddocument/afteraux' on input line ...:
Update code for hook 'enddocument/info' on input line ...:
  normal rule kernel/warnings|kernel/filelist: > found
Code labels for sorting:
 kernel/filelist and kernel/warnings
Data structure for label rules:
 kernel/filelist = 0 -> kernel/warnings
 kernel/warnings = 1 -> 
Handled code for kernel/filelist
Handled code for kernel/warnings
Update code for hook 'enddocument/end' on input line ...:
Update code for hook 'shipout/before' on input line ...:
Code labels for sorting:
 hyperref
Data structure for label rules:
 hyperref = 0 -> 
Handled code for hyperref
Update code for hook 'shipout/foreground' on input line ...:
Update code for hook 'shipout/background' on input line ...:
Update code for hook 'shipout/firstpage' on input line ...:
Code labels for sorting:
 l3backend-dvips and hyperref
Data structure for label rules:
 l3backend-dvips = 0 -> 
 hyperref = 0 -> 
Handled code for l3backend-dvips
Handled code for hyperref
Update code for hook 'shipout/lastpage' on input line ...:
All initialized (non-empty) hooks:
 begindocument -> \cs_if_exist:cT {ver@color.sty}{\cs_set_protected:Npn \__color_backend_pickup:N ##1{\exp_args:NV \tl_if_head_is_space:nTF \current@color {\tl_set:Nx ##1{{spot}{\exp_after:wN \use:n \current@color \c_space_tl 1}}}{\exp_last_unbraced:Nx \__color_backend_pickup:w {\current@color }\s__color_stop ##1}}\cs_new_protected:Npn \__color_backend_pickup:w ##1 ##2\s__color_stop ##3{\tl_set:Nn ##3{{##1}{##2}}}}\cs_new_eq:NN \__graphics_backend_getbb_eps:n \graphics_read_bb:n \def \@tempa ##1,{\XC@ifxcase \tm {\XC@mod@rgb {\XC@calcN {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@cmy {\XC@calcC {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@cmyk {\XC@calcC {##1}\@@tmp \edef \@@tmp {0,0,0,\@@tmp }}\XC@mod@RGB {\edef \@@scl {\rangeRGB }\XC@calcM {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@HTML {\edef \@@scl {\@cclv }\XC@calcM {##1}\@@tmp \XC@calcH \@@tmp \@@tmp \edef \@@tmp {\@@tmp \@@tmp \@@tmp }}\XC@mod@HSB {\edef \@@scl {\rangeHSB }\XC@calcM {##1}\@@tmp \edef \@@tmp {0,0,\@@tmp }}\XC@mod@Gray {\edef \@@scl {\rangeGray }\XC@calcM {##1}\@@tmp }}{\XC@calcN {##1}\@@tmp \edef \@@tmp {0,0,\@@tmp }}}\ifx \XC@cnv@gray \@tempa \def \XC@cnv@gray ##1,{\XC@ifxcase \tm {\XC@mod@rgb {\XC@calcN {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@gray {}\XC@mod@cmy {\XC@calcC {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@cmyk {\XC@calcC {##1}\@@tmp \edef \@@tmp {0,0,0,\@@tmp }}\XC@mod@RGB {\edef \@@scl {\rangeRGB }\XC@calcM {##1}\@@tmp \edef \@@tmp {\@@tmp ,\@@tmp ,\@@tmp }}\XC@mod@HTML {\edef \@@scl {\@cclv }\XC@calcM {##1}\@@tmp \XC@calcH \@@tmp \@@tmp \edef \@@tmp {\@@tmp \@@tmp \@@tmp }}\XC@mod@HSB {\edef \@@scl {\rangeHSB }\XC@calcM {##1}\@@tmp \edef \@@tmp {0,0,\@@tmp }}\XC@mod@Gray {\edef \@@scl {\rangeGray }\XC@calcM {##1}\@@tmp }}{\XC@calcN {##1}\@@tmp \edef \@@tmp {0,0,\@@tmp }}}\fi \let \@tempa \relax \@ifundefined {pdfstringdefDisableCommands}{\let \pdfstringdefDisableCommands \HyPsd@pdfstringdefDisableCommands }{}\def \Hy@varioref@undefined {{??}{??}{}{}{}} \@ifpackageloaded {varioref}{\def \vref@pagenum ##1##2{\@ifundefined {r@##2}{\expandafter \let \csname r@##2\endcsname \Hy@varioref@undefined }{}\edef ##1{\getpagerefnumber {##2}}}}{} \def \Hy@varioref@refstepcounter ##1{\stepcounter {##1}\protected@edef \@currentlabel {\csname p@##1\expandafter \endcsname \csname the##1\endcsname }} \ifx \refstepcounter \Hy@varioref@refstepcounter \let \H@refstepcounter \refstepcounter \let \refstepcounter \Hy@saved@refstepcounter \fi \Hy@AtBeginDocumentHook {}\let \Hy@AtBeginDocumentHook \@undefined \g__hook_begindocument_next_code_tl  
 documentclass -> \ifx \@normalsize \@undefined \let \@normalsize \normalsize \fi \g__hook_documentclass_next_code_tl  
 enddocument/info -> \@dofilelist \@enddocument@kernel@warnings \g__hook_enddocument/info_next_code_tl  
 shipout/before -> \Hy@EveryPageHook \ifx \Hy@EveryPageBoxHook \ltx@empty \else \setbox \AtBeginShipoutBox =\vbox {\offinterlineskip \Hy@EveryPageBoxHook \box \AtBeginShipoutBox }\fi \g__hook_shipout/before_next_code_tl  
 shipout/firstpage -> \bool_lazy_and:nnT {\cs_if_exist_p:N \g__kernel_backend_header_bool }{\g__kernel_backend_header_bool }{\__kernel_backend_literal:n {header=l3backend-dvips.pro}}\Hy@FirstPageHook \ifHy@setpagesize \begingroup \@ifundefined {stockwidth}{\ifdim \paperwidth >\z@ \ifdim \paperheight >\z@ \special {papersize=\the \paperwidth ,\the \paperheight }\fi \fi }{\ifdim \stockwidth >\z@ \ifdim \stockheight >\z@ \special {papersize=\the \stockwidth ,\the \stockheight }\fi \fi }\endgroup \fi \Hy@DisableOption {setpagesize}\g__hook_shipout/firstpage_next_code_tl  
(lthooks2-001.aux
**** Add to hook begindocument (top-level) on input line ... <- \ifx \hyper@anchor \@undefined \global \let \oldcontentsline \contentsline \gdef \contentsline ##1##2##3##4{\oldcontentsline {##1}{##2}{##3}} \global \let \oldnewlabel \newlabel \gdef \newlabel ##1##2{\newlabelxx {##1}##2} \gdef \newlabelxx ##1##2##3##4##5##6{\oldnewlabel {##1}{{##2}{##3}}} \AtEndDocument {\ifx \hyper@anchor \@undefined \let \contentsline \oldcontentsline \let \newlabel \oldnewlabel \fi } \fi 
Update code for hook 'begindocument' on input line ...:
Code labels for sorting:
 l3backend-dvips, hycolor, hyperref and top-level
Data structure for label rules:
 l3backend-dvips = 0 -> 
 hycolor = 0 -> 
 hyperref = 0 -> 
 top-level = 0 -> 
Handled code for l3backend-dvips
Handled code for hycolor
Handled code for hyperref
Handled code for top-level
)
LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line ....
LaTeX Font Info:    ... okay on input line ....
Package hyperref Info: Link coloring OFF on input line ....
(../nameref.sty
Package: nameref ....-..-.. v... Cross-referencing by name of section
(../refcount.sty
Package: refcount ....-..-.. v... Data extraction from label references (HO)
)
(../gettitlestring.sty
Package: gettitlestring ....-..-.. v... Cleanup title references (HO)
)
\c@section@level=\count...
)
LaTeX Info: Redefining \ref on input line ....
LaTeX Info: Redefining \pageref on input line ....
LaTeX Info: Redefining \nameref on input line ....
(lthooks2-001.out) (lthooks2-001.out)
\@outlinefile=\write...
**** Add to hook enddocument/info (top-level) on input line ... <- \begingroup \immediate \closeout \@outlinefile \ReFiCh@Check {}\x {\jobname .out}\ifx \ReFiCh@1 \x \@PackageInfoNoLine {rerunfilecheck}{File `\jobname .out' has not changed.\MessageBreak Checksum: \x }\else \ifnum \ReFiCh@IsAux \jobname .out\relax .aux\relax \@nil \ifx \ReFiCh@1 \ReFiCh@NoFile 1\else 0\fi \ifx \x \ReFiCh@AuxEmptyUnix 1\else \ifx \x \ReFiCh@AuxEmptyDos 1\fi \fi =111 \@PackageInfoNoLine {rerunfilecheck}{File `\jobname .out' is empty .aux file.\MessageBreak Before: \ReFiCh@1 \MessageBreak After: \space \x }\else \@PackageWarningNoLine {rerunfilecheck}{File `\jobname .out' has changed.\ifx \\Rerun to get outlines right\MessageBreak or use package `bookmark'\\\space Rerun\else \MessageBreak Rerun to get outlines right\MessageBreak or use package `bookmark'\fi }\@PackageInfoNoLine {rerunfilecheck}{Checksums for `\jobname .out':\MessageBreak Before: \ReFiCh@1 \MessageBreak After: \space \x }\fi \fi \endgroup 
Update code for hook 'enddocument/info' on input line ...:
  normal rule kernel/warnings|kernel/filelist: > found
Code labels for sorting:
 kernel/filelist, kernel/warnings and top-level
Data structure for label rules:
 kernel/filelist = 0 -> kernel/warnings
 kernel/warnings = 1 -> 
 top-level = 0 -> 
Handled code for kernel/filelist
Handled code for top-level
Handled code for kernel/warnings
The hook 'enddocument':
 Code chunks:
    ---
 Extra code next invocation:
    ---
 Rules:
    ---
 Execution order:
    not set yet
The hook 'enddocument/afterlastpage':
 Code chunks:
    ---
 Extra code next invocation:
    ---
 Rules:
    ---
 Execution order:
    not set yet
The hook 'enddocument/afteraux':
 Code chunks:
    ---
 Extra code next invocation:
    ---
 Rules:
    ---
 Execution order:
    not set yet
The hook 'enddocument/info':
 Code chunks:
    kernel/filelist -> \@dofilelist 
    kernel/warnings -> \@enddocument@kernel@warnings 
    top-level -> \begingroup \immediate \closeout \@outlinefile \ReFiCh@Check {}\x {\jobname .out}\ifx \ReFiCh@1 \x \@PackageInfoNoLine {rerunfilecheck}{File `\jobname .out' has not changed.\MessageBreak Checksum: \x }\else \ifnum \ReFiCh@IsAux \jobname .out\relax .aux\relax \@nil \ifx \ReFiCh@1 \ReFiCh@NoFile 1\else 0\fi \ifx \x \ReFiCh@AuxEmptyUnix 1\else \ifx \x \ReFiCh@AuxEmptyDos 1\fi \fi =111 \@PackageInfoNoLine {rerunfilecheck}{File `\jobname .out' is empty .aux file.\MessageBreak Before: \ReFiCh@1 \MessageBreak After: \space \x }\else \@PackageWarningNoLine {rerunfilecheck}{File `\jobname .out' has changed.\ifx \\Rerun to get outlines right\MessageBreak or use package `bookmark'\\\space Rerun\else \MessageBreak Rerun to get outlines right\MessageBreak or use package `bookmark'\fi }\@PackageInfoNoLine {rerunfilecheck}{Checksums for `\jobname .out':\MessageBreak Before: \ReFiCh@1 \MessageBreak After: \space \x }\fi \fi \endgroup 
 Extra code next invocation:
    ---
 Rules:
    kernel/filelist|kernel/warnings with relation <
 Execution order (after applying rules):
    kernel/filelist, top-level, kernel/warnings
The hook 'enddocument/end':
 Code chunks:
    ---
 Extra code next invocation:
    ---
 Rules:
    ---
 Execution order:
    not set yet
Absolute page = 1 (target: 1)
[1
] (lthooks2-001.aux)
Package rerunfilecheck Info: File `lthooks2-001.out' has not changed.
(rerunfilecheck)             Checksum: DEC2A8850D85BB797B5887A8CA1473F2;36.
