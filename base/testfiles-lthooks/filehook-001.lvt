% like filehook-ext but testing new implementation

\input{regression-test}

\RequirePackage{lthooks}

\def\Hook#1{\ifx#1\undefined
   \typeout{Not defined: \string#1}%
 \else #1{\typeout{\string#1 - code (for \CurrentFile)}}\fi}

\newcommand\NamedHook[2]{\ifx#1\undefined
   \typeout{Not defined: \string#1{#2}}%
\else #1{#2}{\typeout{\string#1{#2} - code (for \CurrentFile)}}\fi}


\begin{filecontents}{\jobname-x.tex}
  \typeout{\jobname-x}
\end{filecontents}


\begin{filecontents}{\jobname-pkg.sty}
  \typeout{\jobname \space package}
  \AtEndOfPackage{\typeout{LaTeX's end of package hook}}
\end{filecontents}

\begin{filecontents}{baz.tex}
  \typeout{baz include}
\end{filecontents}

\includeonly{\jobname-x,bar}  % baz excluded



\START

\Hook\AtBeginOfEveryFile
\Hook\AtEndOfEveryFile

\Hook\AtBeginOfFiles
\Hook\AtEndOfFiles

\Hook\AtBeginOfInputs
\Hook\AtEndOfInputs

\Hook\AtBeginOfIncludes
\Hook\AtEndOfIncludes
\Hook\AfterIncludes

\NamedHook\AtBeginOfFile{\jobname-x.tex}
\NamedHook\AtEndOfFile{\jobname-x.tex}

\NamedHook\AtBeginOfFile{\jobname-x}         % .tex implicit
\NamedHook\AtEndOfFile{\jobname-x}           % .tex implicit

\NamedHook\AtBeginOfFile{bar}
\NamedHook\AtEndOfFile{bar}

\NamedHook\AtBeginOfInputFile{\jobname-x.tex}
\NamedHook\AtEndOfInputFile{\jobname-x.tex}

\NamedHook\AtBeginOfInputFile{bar.tex}
\NamedHook\AtEndOfInputFile{bar.tex}

\NamedHook\AtBeginOfIncludeFile{\jobname-x}
\NamedHook\AtEndOfIncludeFile{\jobname-x}
\NamedHook\AfterIncludeFile{\jobname-x}

\NamedHook\AtBeginOfIncludeFile{bar}
\NamedHook\AtEndOfIncludeFile{bar}
\NamedHook\AfterIncludeFile{bar}

\NamedHook\AtBeginOfPackageFile{filehook}
\NamedHook\AtEndOfPackageFile{filehook}

\NamedHook\AtBeginOfPackageFile{\jobname-pkg}
\NamedHook\AtEndOfPackageFile{\jobname-pkg}

\NamedHook\AtBeginOfClassFile{article}
\NamedHook\AtEndOfClassFile{article}


\typeout{---------------- \string\documentclass\space  ------------}

\documentclass{article}


\typeout{---------------- \string\usepackage\space (already loaded) ------------}
\usepackage{filehook}    

\typeout{---------------- \string\usepackage\space (new) ------------}
\usepackage{\jobname-pkg}    


\typeout{---------------- \string\begin{document}\space ------------}

\begin{document}

\typeout{---------------- \string\include\space ------------}
\include{\jobname-x}


\typeout{---------------- \string\input\space   ------------}
\input{\jobname-x}

\typeout{---------------- \string\input\space (missing)  ------------}
\makeatletter
\gdef\@missingfileerror#1#2{%
     \typeout{^^J! LaTeX Error: File `#1.#2' not found.^^J^^J%
       but for this test we continue ...^^J}}
\makeatother
\input{\jobname-?? with space}

\typeout{---------------- \string\InputIfFileExists\space ------------}
\InputIfFileExists{\jobname-x.tex}{\typeout{T}}{\typeout{F}}

\typeout{---------------- \string\InputIfFileExists\space (missing) ------------}
\InputIfFileExists{bar.tex}{\typeout{T}}{\typeout{F}}

\typeout{---------------- \string\include\space (missing) ------------}
\include{bar}

\typeout{---------------- \string\include\space (explicitly excluded) ------------}
\include{baz}

\stop





\end{document}



