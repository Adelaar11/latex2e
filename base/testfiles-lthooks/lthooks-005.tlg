This is a generated file for the l3build validation system.
Don't change this file in any respect.
**** Add to hook xxx (label1) on input line ... <-  foo1
**** Add to hook xxx (label2) on input line ... <-  foo2
**** Add to hook xxx (label3) on input line ... <-  foo3
**** Add to hook xxx (label4) on input line ... <-  foo4
**** Add to hook xxx (label5) on input line ... <-  foo5
**** Add to hook xxx (label6) on input line ... <-  foo6
**** Add to hook xxx (label7) on input line ... <-  foo7
**** Add to hook xxx (label8) on input line ... <-  foo8
**** Add to hook xxx (label9) on input line ... <-  foo9
The property list \g__hook_xxx_code_prop contains the pairs (without outer
braces):
>  {label1}  =>  { foo1}
>  {label2}  =>  { foo2}
>  {label3}  =>  { foo3}
>  {label4}  =>  { foo4}
>  {label5}  =>  { foo5}
>  {label6}  =>  { foo6}
>  {label7}  =>  { foo7}
>  {label8}  =>  { foo8}
>  {label9}  =>  { foo9}.
The sequence \g__hook_all_seq contains the items (without outer braces):
>  {begindocument}
>  {enddocument}
>  {rmfamily}
>  {sffamily}
>  {ttfamily}
>  {defaultfamily}
>  {documentclass}
>  {begindocument/end}
>  {enddocument/afterlastpage}
>  {enddocument/afteraux}
>  {enddocument/info}
>  {enddocument/end}
>  {shipout/before}
>  {shipout/foreground}
>  {shipout/background}
>  {shipout/firstpage}
>  {shipout/lastpage}
>  {xxx}.
The property list \g__hook_??_rules_prop contains the pairs (without outer
braces):
>  {label9|label2}  =>  {<}
>  {label3|label7}  =>  {<}
>  {label7|label5}  =>  {<}.
The property list \g__hook_xxx_rules_prop contains the pairs (without outer
braces):
>  {label5|label8}  =>  {<}
>  {label8|label6}  =>  {<}
>  {label4|label6}  =>  {<}
>  {label1|label3}  =>  {<}
>  {label7|label4}  =>  {<}
>  {label9|label5}  =>  {<}
>  {label2|label8}  =>  {<}
>  {label1|no}  =>  {<}
>  {no|label2}  =>  {<}
>  {no|nono}  =>  {<}.
Update code for hook 'begindocument' on input line ...:
Code labels for sorting:
 l3backend-dvips
Data structure for label rules:
 l3backend-dvips = 0 -> 
Handled code for l3backend-dvips
Update code for hook 'enddocument' on input line ...:
Update code for hook 'rmfamily' on input line ...:
Update code for hook 'sffamily' on input line ...:
Update code for hook 'ttfamily' on input line ...:
Update code for hook 'defaultfamily' on input line ...:
Update code for hook 'documentclass' on input line ...:
Code labels for sorting:
 legacy
Data structure for label rules:
 legacy = 0 -> 
Handled code for legacy
Update code for hook 'begindocument/end' on input line ...:
Update code for hook 'enddocument/afterlastpage' on input line ...:
Update code for hook 'enddocument/afteraux' on input line ...:
Update code for hook 'enddocument/info' on input line ...:
  normal rule kernel/warnings|kernel/filelist: > found
Code labels for sorting:
 kernel/filelist and kernel/warnings
Data structure for label rules:
 kernel/filelist = 0 -> kernel/warnings
 kernel/warnings = 1 -> 
Handled code for kernel/filelist
Handled code for kernel/warnings
Update code for hook 'enddocument/end' on input line ...:
Update code for hook 'shipout/before' on input line ...:
Update code for hook 'shipout/foreground' on input line ...:
Update code for hook 'shipout/background' on input line ...:
Update code for hook 'shipout/firstpage' on input line ...:
Code labels for sorting:
 l3backend-dvips
Data structure for label rules:
 l3backend-dvips = 0 -> 
Handled code for l3backend-dvips
Update code for hook 'shipout/lastpage' on input line ...:
Update code for hook 'xxx' on input line ...:
  normal rule label3|label1: > found
  normal rule label6|label4: > found
 default rule label7|label3: > found
  normal rule label7|label4: < found
 default rule label7|label5: < found
  normal rule label8|label2: > found
  normal rule label8|label5: > found
  normal rule label8|label6: < found
 default rule label9|label2: < found
  normal rule label9|label5: < found
Code labels for sorting:
 label1, label2, label3, label4, label5, label6, label7, label8 and label9
Data structure for label rules:
 label1 = 0 -> label3
 label2 = 1 -> label8
 label3 = 1 -> label7
 label4 = 1 -> label6
 label5 = 2 -> label8
 label6 = 2 -> 
 label7 = 1 -> label4 -> label5
 label8 = 2 -> label6
 label9 = 0 -> label2 -> label5
Handled code for label1
Handled code for label9
Handled code for label3
Handled code for label2
Handled code for label7
Handled code for label4
Handled code for label5
Handled code for label8
Handled code for label6
All initialized (non-empty) hooks:
 begindocument -> \cs_if_exist:cT {ver@color.sty}{\cs_set_protected:Npn \__color_backend_pickup:N ##1{\exp_args:NV \tl_if_head_is_space:nTF \current@color {\tl_set:Nx ##1{{spot}{\exp_after:wN \use:n \current@color \c_space_tl 1}}}{\exp_last_unbraced:Nx \__color_backend_pickup:w {\current@color }\s__color_stop ##1}}\cs_new_protected:Npn \__color_backend_pickup:w ##1 ##2\s__color_stop ##3{\tl_set:Nn ##3{{##1}{##2}}}}\cs_new_eq:NN \__graphics_backend_getbb_eps:n \graphics_read_bb:n \g__hook_begindocument_next_code_tl  
 documentclass -> \ifx \@normalsize \@undefined \let \@normalsize \normalsize \fi \g__hook_documentclass_next_code_tl  
 enddocument/info -> \@dofilelist \@enddocument@kernel@warnings \g__hook_enddocument/info_next_code_tl  
 shipout/firstpage -> \bool_lazy_and:nnT {\cs_if_exist_p:N \g__kernel_backend_header_bool }{\g__kernel_backend_header_bool }{\__kernel_backend_literal:n {header=l3backend-dvips.pro}}\g__hook_shipout/firstpage_next_code_tl  
 xxx ->  foo1 foo9 foo3 foo2 foo7 foo4 foo5 foo8 foo6\g__hook_xxx_next_code_tl  
